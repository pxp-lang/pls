#!/usr/bin/env php
<?php

namespace Pxp\Pls;
use Exception;

require_once __DIR__ . '/../vendor/autoload.php';

function main(int $argc, array $argv) {
    if ($argc === 1 || has_option('--help', $argv) || has_option('-h', $argv)) {
        help();
    }

    $pls = new Pls();
    $command = $argv[1];

    if ($command === 'completion') {
        try {
            echo json_encode($pls->completion($argv[2], $argv[3], (int) $argv[4]));
        } catch (Exception $e) {
            ray($e);
        }
    }

    if ($command === 'hover') {
        try {
            $hover = $pls->hover($argv[2], $argv[3], (int) $argv[4]);

            if ($hover !== null) {
                echo json_encode($hover);
            }
        } catch (Exception $e) {
            ray($e->getMessage());
        }
    }

    if ($command === 'definition') {
        try {
            $definition = $pls->definition($argv[2], $argv[3], (int) $argv[4]);

            if ($definition !== null) {
                echo json_encode($definition);
            }
        } catch (Exception $e) {
            ray($e->getMessage());
        }
    }
}

function help(): never {
    echo "usage: pls <command>\n";
    echo "\n";
    echo "COMMANDS:\n";
    echo "   completion\n";
    echo "   hover\n";
    echo "   definition\n";
    exit(0);
}

function has_option(string $option, array $argv): bool
{
    return in_array($option, $argv);
}

function get_option(string $option, array $argv): ?string
{
    if (! has_option($option, $argv)) {
        return null;
    }

    return $argv[array_search($option, $argv) + 1] ?? null;
}

main($argc, $argv);